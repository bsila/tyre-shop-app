{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ivan\\\\Documents\\\\tyre-shop-app\\\\client\\\\src\\\\components\\\\pages\\\\AppointmentManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"id_idorder\",\n  label: \"ID\",\n  minWidth: 15\n}, {\n  id: \"id_buyer_name\",\n  label: \"Ime\",\n  minWidth: 100\n}, {\n  id: \"id_buyer_surname\",\n  label: \"Prezime\",\n  minWidth: 100\n}, {\n  id: \"id_offer_code\",\n  label: \"Kod\",\n  minWidth: 15\n}, {\n  id: \"id_quantity\",\n  label: \"Količina\",\n  minWidth: 25\n}, {\n  id: \"id_e_mail\",\n  label: \"E-mail\",\n  minWidth: 100\n}, {\n  id: \"id_phone_no\",\n  label: \"Mobitel\",\n  minWidth: 100\n}, {\n  id: \"id_comments\",\n  label: \"Komentar\",\n  minWidth: 100\n}, {\n  id: \"editAppointment\",\n  label: \"Uredi termin...\",\n  minWidth: 100\n}, {\n  id: \"deleteAppointment\",\n  label: \"Poništi termin...\",\n  minWidth: 100\n}, {\n  id: \"setAppointment\",\n  label: \"Dogovori termin...\",\n  minWidth: 100\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: \"75%\",\n    alignContent: \"center\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [appointmentList, setAppointmentList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then(response => {\n      setAppointmentList(response.data);\n\n      for (var i = 0; i < appointmentList.length; ++i) {\n        createData(appointmentList.idorder, appointmentList.buyer_name, appointmentList.buyer_surname, appointmentList.offer_code, appointmentList.e_mail, appointmentList.phone_no, appointmentList.comments);\n      }\n    });\n  }, []);\n  const rows = [];\n\n  function createData(id_order, id_buyer_name, id_buyer_surname, id_offer_code, id_e_mail, id_phone_no, id_comments) {\n    rows.concat({\n      id_order,\n      id_buyer_name,\n      id_buyer_surname,\n      id_offer_code,\n      id_e_mail,\n      id_phone_no,\n      id_comments\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: appointmentList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = appointmentList[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === \"number\" ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: appointmentList.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"LaaK/v8gFOLPUtxL00zz0JB78fI=\", false, function () {\n  return [useStyles];\n});\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["C:/Users/Ivan/Documents/tyre-shop-app/client/src/components/pages/AppointmentManager.js"],"names":["React","useState","useEffect","Axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","useStyles","root","width","alignContent","container","maxHeight","StickyHeadTable","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","appointmentList","setAppointmentList","get","then","response","data","i","length","createData","idorder","buyer_name","buyer_surname","offer_code","e_mail","phone_no","comments","rows","id_order","id_buyer_name","id_buyer_surname","id_offer_code","id_e_mail","id_phone_no","id_comments","concat","map","column","align","slice","row","format","code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst columns = [\r\n  { id: \"id_idorder\", label: \"ID\", minWidth: 15 },\r\n  { id: \"id_buyer_name\", label: \"Ime\", minWidth: 100 },\r\n  { id: \"id_buyer_surname\", label: \"Prezime\", minWidth: 100 },\r\n  { id: \"id_offer_code\", label: \"Kod\", minWidth: 15 },\r\n  { id: \"id_quantity\", label: \"Količina\", minWidth: 25 },\r\n  { id: \"id_e_mail\", label: \"E-mail\", minWidth: 100 },\r\n  { id: \"id_phone_no\", label: \"Mobitel\", minWidth: 100 },\r\n  { id: \"id_comments\", label: \"Komentar\", minWidth: 100 },\r\n  { id: \"editAppointment\", label: \"Uredi termin...\", minWidth: 100 },\r\n  { id: \"deleteAppointment\", label: \"Poništi termin...\", minWidth: 100 },\r\n  { id: \"setAppointment\", label: \"Dogovori termin...\", minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"75%\",\r\n    alignContent: \"center\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [appointmentList, setAppointmentList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then((response) => {\r\n      setAppointmentList(response.data);\r\n\r\n      for (var i = 0; i < appointmentList.length; ++i) {\r\n        createData(\r\n          appointmentList.idorder,\r\n          appointmentList.buyer_name,\r\n          appointmentList.buyer_surname,\r\n          appointmentList.offer_code,\r\n          appointmentList.e_mail,\r\n          appointmentList.phone_no,\r\n          appointmentList.comments\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const rows = [];\r\n  function createData(\r\n    id_order,\r\n    id_buyer_name,\r\n    id_buyer_surname,\r\n    id_offer_code,\r\n    id_e_mail,\r\n    id_phone_no,\r\n    id_comments\r\n  ) {\r\n    rows.concat({\r\n      id_order,\r\n      id_buyer_name,\r\n      id_buyer_surname,\r\n      id_offer_code,\r\n      id_e_mail,\r\n      id_phone_no,\r\n      id_comments,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {appointmentList\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = appointmentList[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={appointmentList.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}