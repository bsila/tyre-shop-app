[{"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\index.js":"1","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Footer.js":"2","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Contact.js":"3","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Home.js":"4","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\NotificationManager.js":"5","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Offer.js":"6","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Cards.js":"7","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\CardItem.js":"8","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Notification.js":"9","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Appointment.js":"10","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Navbar.js":"11","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\AppointmentManager.js":"12","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Help.js":"13","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\FAQ.js":"14"},{"size":158,"mtime":1610484674846,"results":"15","hashOfConfig":"16"},{"size":3641,"mtime":1610484674756,"results":"17","hashOfConfig":"16"},{"size":3320,"mtime":1610746321622,"results":"18","hashOfConfig":"16"},{"size":252,"mtime":1610484674760,"results":"19","hashOfConfig":"16"},{"size":14504,"mtime":1610633907502,"results":"20","hashOfConfig":"16"},{"size":288,"mtime":1610484674761,"results":"21","hashOfConfig":"16"},{"size":2194,"mtime":1610484674755,"results":"22","hashOfConfig":"16"},{"size":611,"mtime":1610484674755,"results":"23","hashOfConfig":"16"},{"size":3328,"mtime":1610531939326,"results":"24","hashOfConfig":"16"},{"size":4358,"mtime":1610551134622,"results":"25","hashOfConfig":"16"},{"size":2929,"mtime":1610484674757,"results":"26","hashOfConfig":"16"},{"size":11891,"mtime":1610551209892,"results":"27","hashOfConfig":"16"},{"size":1521,"mtime":1610706011664,"results":"28","hashOfConfig":"16"},{"size":363,"mtime":1610700270533,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"dp8cm2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\index.js",[],["62","63"],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Footer.js",[],["64","65"],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Contact.js",["66"],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Home.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\NotificationManager.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"import \"../../App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles, withStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { parse, format, toDate } from \"date-fns\";\r\nimport Select from \"@material-ui/core/select\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst columns = [\r\n  { id: \"idorder\", label: \"ID\", minWidth: 15},\r\n  { id: \"buyer_name\", label: \"Ime\", minWidth: 75},\r\n  { id: \"buyer_surname\", label: \"Prezime\", minWidth: 75},\r\n  { id: \"offer_code\", label: \"Kod\", minWidth: 15},\r\n  { id: \"quantity\", label: \"Količina\", minWidth: 25},\r\n  { id: \"service_date_time\", label: \"Termin\", minWidth: 50},\r\n  { id: \"receipt_no\", label: \"Broj računa\", minWidth: 50},\r\n];\r\n\r\nconst columnsUnsortable = [\r\n  { id: \"notification_mode\", label: \"Način kontaktiranja\", minWidth: 50},\r\n  { id: \"e_mail\", label: \"E-mail\", minWidth: 75 },\r\n  { id: \"phone_no\", label: \"Mobitel\", minWidth: 50 },\r\n  { id: \"comments\", label: \"Komentar\", minWidth: 75, maxWidth: 400},\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst StickyTableCell = withStyles((theme) => ({\r\n  head: {\r\n    position: \"sticky\",\r\n    left: 0,\r\n    zIndex: theme.zIndex.appBar + 2\r\n  },\r\n  body: {\r\n    position: \"sticky\",\r\n    left: 0,\r\n    backgroundColor: theme.palette.common.white,\r\n    zIndex: theme.zIndex.appBar + 1\r\n  },\r\n}))(TableCell);\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n      <StickyTableCell className={classes.head}>Slanje obavijesti</StickyTableCell>\r\n        {columns.map((column) => (\r\n            <TableCell\r\n              key={column.id}\r\n              align={column.align}\r\n              style={{minWidth: column.minWidth}}\r\n              sortDirection={orderBy === column.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === column.id}\r\n                direction={orderBy === column.id ? order : 'asc'}\r\n                onClick={createSortHandler(column.id)}\r\n              >\r\n                {column.label}\r\n                {orderBy === column.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n        ))}\r\n        {columnsUnsortable.map((column) => (\r\n          <TableCell\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{minWidth: column.minWidth}}\r\n          >\r\n            {column.label}\r\n          </TableCell>\r\n        ))}\r\n        \r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction NotificationManager() {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [notificationList, setNotificationList] = useState([]);\r\n  const [notification, sendNotification] = useState(\r\n    format(toDate(new Date()), \"yyyy-MM-dd'T'HH:mm\")\r\n  );\r\n  const [notificationOption, setnotificationOption] = useState('');\r\n  const [errorOption, setErrorOption] = useState(false);\r\n\r\n  const handleNotificationChange = (event) => {\r\n    setnotificationOption(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then((response) => {\r\n      setNotificationList(response.data);\r\n    });\r\n  }, []);\r\n\r\n  function refreshTableData() {\r\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then((response) => {\r\n      setNotificationList(response.data);\r\n    });\r\n  }\r\n\r\n  function editNotification(id, newNotification, receipt) {\r\n    Axios.put(\"http://localhost:3001/api/editAppointment\", {\r\n      id: id,\r\n      newNotification: newNotification,\r\n      receipt: receipt,\r\n    });\r\n\r\n    refreshTableData();\r\n    refreshTableData();\r\n  }\r\n\r\n  function deleteNotification(id) {\r\n    Axios.delete(`http://localhost:3001/api/deleteAppointment/${id}`);\r\n\r\n    refreshTableData();\r\n    refreshTableData();\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('idorder');\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"notificationManager\">\r\n      <Paper>        \r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <EnhancedTableHead \r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={notificationList.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort (notificationList, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.code}\r\n                    >\r\n                      <StickyTableCell className={classes.cell}>\r\n                        <Popup\r\n                          trigger={\r\n                            <Button linkon=\"0\" buttonstyle=\"btn--primary\">\r\n                              OBAVIJESTI\r\n                            </Button>\r\n                          }\r\n                          maxWidth=\"200px\"\r\n                          maxHeight=\"auto\"\r\n                          modal\r\n                          nested\r\n                          contentStyle={{\r\n                            width: \"275px\",\r\n                            border: \"3px solid #242424\",\r\n                            borderRadius: \"5px\",\r\n                          }}\r\n                        >\r\n                          {(close) => (\r\n                            <div className=\"modal\">\r\n                              <div className=\"header\">Slanje obavijesti</div>\r\n                              <div className=\"content\">\r\n                                <form className=\"container\">\r\n                                <div className=\"message\">Osoba {row[\"buyer_name\"]} {row[\"buyer_surname\"]} će biti obaviještena. <br/></div>\r\n                                </form>\r\n                                <form className=\"container\" noValidate>\r\n                                  {!row[\"notification_mode\"] ? (\r\n                                    <FormControl required className={classes.popUp}>\r\n                                    <InputLabel\r\n                                      id={\"notification\"}\r\n                                      label=\"Odaberi način kontaktiranja...\"\r\n                                    >Odaberi način kontaktiranja</InputLabel>\r\n                                    <Select\r\n                                      error={errorOption}\r\n                                      labelId=\"notification\"\r\n                                      id=\"notification_method\"\r\n                                      value={notificationOption}\r\n                                      onChange={handleNotificationChange}\r\n                                  >\r\n                                      <MenuItem value=\"1\">E-mail</MenuItem>\r\n                                      <MenuItem value=\"2\">SMS poruka</MenuItem>\r\n                                      <MenuItem value=\"3\">Telefonski poziv</MenuItem>\r\n                                    </Select>\r\n                                    </FormControl>\r\n                                   ) : (\r\n                                    <div className=\"message\">\r\n                                    Kontakt: {row[\"notification_mode\"] === 3 ? \"Poziv \" + row[\"phone_no\"] : (row[\"notification_mode\"] === 2 ? \"SMS \" + row[\"phone_no\"] : \"E-mail \" + row[\"e_mail\"])}\r\n                                    </div>\r\n                                  )}\r\n                                </form>\r\n                              </div>\r\n\r\n                              <div className=\"actions\">\r\n                                <Button\r\n                                  buttonstyle=\"btn--primary\"\r\n                                  linkon=\"0\"\r\n                                  /* onClick={() => {\r\n                                    sendNotification().value\r\n                                  }} */\r\n                                >\r\n                                  POTVRDI\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Popup>\r\n                      </StickyTableCell>\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id] ? row[column.id] : \"/\";\r\n\r\n                        return (\r\n                          <TableCell\r\n                            key={column.id + row[\"idorder\"]}\r\n                            align={column.align}\r\n                            style={{minWidth: column.minWidth, maxWidth: column.maxWidth, whiteSpace: 'nowrap', overflow: 'auto'}}\r\n                          >\r\n                            {value !== \"/\" && column.id === \"service_date_time\"\r\n                              ? format(\r\n                                  parse(\r\n                                    value.toString(),\r\n                                    \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\",\r\n                                    new Date()\r\n                                  ),\r\n                                  \"yyyy-MM-dd' u 'HH:mm\"\r\n                                )\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n\r\n                      {columnsUnsortable.map((column) => {\r\n                        const value = row[column.id] ? row[column.id] : \"/\";\r\n\r\n                        return (\r\n                          <TableCell\r\n                            key={column.id + row[\"idorder\"]}\r\n                            align={column.align}\r\n                            style={{minWidth: column.minWidth, maxWidth: column.maxWidth, whiteSpace: 'nowrap', overflow: 'auto'}}\r\n                          >\r\n                            {value !==\"/\" && column.id === \"notification_mode\" ? {\r\n                              '1': \"E-mail\",\r\n                              '2': \"SMS\",\r\n                              '3': \"Telefonski poziv\"\r\n                           }[value] : value }\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n\r\n                      \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={notificationList.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationManager;\r\n","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Offer.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Cards.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\CardItem.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Notification.js",["88","89","90","91"],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Appointment.js",["92","93","94","95","96","97","98","99","100"],"import React, { useState } from \"react\";\r\nimport \"../../App.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default function Appointment() {\r\n  const [termsConditions, setTermsConditions] = useState(false);\r\n  const [errorName, setErrorName] = useState(false);\r\n  const [errorSurname, setErrorSurname] = useState(false);\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n  const [errorPhoneNo, setErrorPhoneNo] = useState(false);\r\n  const [errorOfferCode, setErrorOfferCode] = useState(false);\r\n  const [errorQuantity, setErrorQuantity] = useState(false);\r\n\r\n  return (\r\n    <form className=\"appointment\">\r\n      <div className=\"form--container\">\r\n        <p className=\"title\">Osobni podaci</p>\r\n        <TextField\r\n          error={errorName}\r\n          id=\"first_name\"\r\n          variant=\"outlined\"\r\n          label=\"Ime\"\r\n          placeholder=\"Ivan\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite ime.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorSurname}\r\n          variant=\"outlined\"\r\n          id=\"last_name\"\r\n          label=\"Prezime\"\r\n          placeholder=\"Horvat\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite prezime.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorEmail}\r\n          variant=\"outlined\"\r\n          id=\"e_mail\"\r\n          label=\"Adresa e-pošte\"\r\n          placeholder=\"ivan.horvat@mail.com\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite valjanu adresu e-pošte.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorPhoneNo}\r\n          variant=\"outlined\"\r\n          id=\"phone_no\"\r\n          label=\"Telefon/mobitel\"\r\n          placeholder=\"0912345678\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite telefon/mobitel.\"\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form--container\">\r\n        <p className=\"title\">Podaci vezani za narudžbu</p>\r\n        <TextField\r\n          error={errorOfferCode}\r\n          variant=\"outlined\"\r\n          id=\"offer_code\"\r\n          label=\"Šifra proizvoda\"\r\n          placeholder=\"1234567\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite šifru proizvoda.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorQuantity}\r\n          variant=\"outlined\"\r\n          id=\"quantity\"\r\n          label=\"Količina\"\r\n          placeholder=\"4\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite količinu.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          id=\"dimension\"\r\n          label=\"Dimenzija\"\r\n          placeholder=\"195/50/15\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite dimenziju.\"\r\n          size=\"small\"\r\n        />\r\n        <TextareaAutosize\r\n          aria-label=\"Dodatni komentar\"\r\n          id=\"comment\"\r\n          rowsMin={5}\r\n          placeholder=\"Komentar...\"\r\n          className=\"comment--textarea\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form--container\">\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              onChange={(event) => {\r\n                setTermsConditions(event.target.checked);\r\n              }}\r\n              name=\"checkTermsConditions\"\r\n              id=\"checkTermsConditions\"\r\n            />\r\n          }\r\n          label=\"Slažem se s Odredbama i uvjetima te Pravilima privatnosti\"\r\n          //   helperText=\"Za nastavak je nužno prihvatiti.\"\r\n        />\r\n        <Button\r\n          className=\"submit--button\"\r\n          onlink=\"0\"\r\n          buttonsize=\"btn--large\"\r\n          buttonstyle=\"btn--primary\"\r\n        >\r\n          NARUČI SE\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\AppointmentManager.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Help.js",["101"],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\FAQ.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"112","line":14,"column":8,"nodeType":"110","messageId":"111","endLine":14,"endColumn":15},{"ruleId":"108","severity":1,"message":"113","line":15,"column":8,"nodeType":"110","messageId":"111","endLine":15,"endColumn":18},{"ruleId":"108","severity":1,"message":"114","line":20,"column":8,"nodeType":"110","messageId":"111","endLine":20,"endColumn":12},{"ruleId":"108","severity":1,"message":"115","line":21,"column":10,"nodeType":"110","messageId":"111","endLine":21,"endColumn":17},{"ruleId":"108","severity":1,"message":"116","line":22,"column":8,"nodeType":"110","messageId":"111","endLine":22,"endColumn":17},{"ruleId":"108","severity":1,"message":"117","line":27,"column":8,"nodeType":"110","messageId":"111","endLine":27,"endColumn":16},{"ruleId":"108","severity":1,"message":"118","line":28,"column":8,"nodeType":"110","messageId":"111","endLine":28,"endColumn":18},{"ruleId":"108","severity":1,"message":"119","line":29,"column":8,"nodeType":"110","messageId":"111","endLine":29,"endColumn":15},{"ruleId":"108","severity":1,"message":"120","line":30,"column":8,"nodeType":"110","messageId":"111","endLine":30,"endColumn":24},{"ruleId":"108","severity":1,"message":"121","line":31,"column":8,"nodeType":"110","messageId":"111","endLine":31,"endColumn":14},{"ruleId":"108","severity":1,"message":"122","line":32,"column":8,"nodeType":"110","messageId":"111","endLine":32,"endColumn":18},{"ruleId":"108","severity":1,"message":"123","line":33,"column":8,"nodeType":"110","messageId":"111","endLine":33,"endColumn":22},{"ruleId":"108","severity":1,"message":"124","line":117,"column":20,"nodeType":"110","messageId":"111","endLine":117,"endColumn":36},{"ruleId":"108","severity":1,"message":"125","line":117,"column":54,"nodeType":"110","messageId":"111","endLine":117,"endColumn":65},{"ruleId":"108","severity":1,"message":"126","line":117,"column":67,"nodeType":"110","messageId":"111","endLine":117,"endColumn":75},{"ruleId":"108","severity":1,"message":"127","line":176,"column":10,"nodeType":"110","messageId":"111","endLine":176,"endColumn":22},{"ruleId":"108","severity":1,"message":"128","line":176,"column":24,"nodeType":"110","messageId":"111","endLine":176,"endColumn":40},{"ruleId":"108","severity":1,"message":"129","line":180,"column":23,"nodeType":"110","messageId":"111","endLine":180,"endColumn":37},{"ruleId":"108","severity":1,"message":"130","line":198,"column":12,"nodeType":"110","messageId":"111","endLine":198,"endColumn":28},{"ruleId":"108","severity":1,"message":"131","line":209,"column":12,"nodeType":"110","messageId":"111","endLine":209,"endColumn":30},{"ruleId":"108","severity":1,"message":"132","line":219,"column":20,"nodeType":"110","messageId":"111","endLine":219,"endColumn":31},{"ruleId":"108","severity":1,"message":"133","line":9,"column":18,"nodeType":"110","messageId":"111","endLine":9,"endColumn":27},{"ruleId":"108","severity":1,"message":"134","line":12,"column":26,"nodeType":"110","messageId":"111","endLine":12,"endColumn":41},{"ruleId":"108","severity":1,"message":"129","line":13,"column":25,"nodeType":"110","messageId":"111","endLine":13,"endColumn":39},{"ruleId":"108","severity":1,"message":"135","line":15,"column":12,"nodeType":"110","messageId":"111","endLine":15,"endColumn":22},{"ruleId":"108","severity":1,"message":"136","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":32},{"ruleId":"108","severity":1,"message":"137","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":20},{"ruleId":"108","severity":1,"message":"138","line":12,"column":10,"nodeType":"110","messageId":"111","endLine":12,"endColumn":25},{"ruleId":"108","severity":1,"message":"139","line":13,"column":21,"nodeType":"110","messageId":"111","endLine":13,"endColumn":33},{"ruleId":"108","severity":1,"message":"140","line":14,"column":24,"nodeType":"110","messageId":"111","endLine":14,"endColumn":39},{"ruleId":"108","severity":1,"message":"141","line":15,"column":22,"nodeType":"110","messageId":"111","endLine":15,"endColumn":35},{"ruleId":"108","severity":1,"message":"142","line":16,"column":24,"nodeType":"110","messageId":"111","endLine":16,"endColumn":39},{"ruleId":"108","severity":1,"message":"143","line":17,"column":26,"nodeType":"110","messageId":"111","endLine":17,"endColumn":43},{"ruleId":"108","severity":1,"message":"144","line":18,"column":25,"nodeType":"110","messageId":"111","endLine":18,"endColumn":41},{"ruleId":"145","severity":1,"message":"146","line":19,"column":13,"nodeType":"147","messageId":"148","endLine":19,"endColumn":68},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],["149"],["150"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'clsx' is defined but never used.","'lighten' is defined but never used.","'TextField' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'notification' is assigned a value but never used.","'sendNotification' is assigned a value but never used.","'setErrorOption' is assigned a value but never used.","'editNotification' is defined but never used.","'deleteNotification' is defined but never used.","'setSelected' is assigned a value but never used.","'FormLabel' is defined but never used.","'setErrorReceipt' is assigned a value but never used.","'radioValue' is assigned a value but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'termsConditions' is assigned a value but never used.","'setErrorName' is assigned a value but never used.","'setErrorSurname' is assigned a value but never used.","'setErrorEmail' is assigned a value but never used.","'setErrorPhoneNo' is assigned a value but never used.","'setErrorOfferCode' is assigned a value but never used.","'setErrorQuantity' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]