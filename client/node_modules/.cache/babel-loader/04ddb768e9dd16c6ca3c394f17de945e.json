{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ivan\\\\Documents\\\\tyre-shop-app\\\\client\\\\src\\\\components\\\\Button.js\";\nimport React from \"react\";\nimport \"./Button.css\";\nimport { Link } from \"react-router-dom\"; //arrays with css classes\n\nconst STYLES = [\"btn--primary\", \"btn--outline\"];\nconst SIZES = [\"btn--medium\", \"btn--large\"];\nexport const Button = ({\n  children,\n  type,\n  onclick,\n  buttonstyle,\n  buttonsize,\n  linkpath,\n  linkon\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonstyle) ? buttonstyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonsize) ? buttonsize : SIZES[0];\n\n  if (linkon) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: linkpath,\n      className: \"btn-mobile\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n        onClick: onclick,\n        type: type,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n      onClick: onclick,\n      type: type,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/Ivan/Documents/tyre-shop-app/client/src/components/Button.js"],"names":["React","Link","STYLES","SIZES","Button","children","type","onclick","buttonstyle","buttonsize","linkpath","linkon","checkButtonStyle","includes","checkButtonSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAf;AACA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACrBC,EAAAA,QADqB;AAErBC,EAAAA,IAFqB;AAGrBC,EAAAA,OAHqB;AAIrBC,EAAAA,WAJqB;AAKrBC,EAAAA,UALqB;AAMrBC,EAAAA,QANqB;AAOrBC,EAAAA;AAPqB,CAAD,KAQhB;AACJ,QAAMC,gBAAgB,GAAGV,MAAM,CAACW,QAAP,CAAgBL,WAAhB,IACrBA,WADqB,GAErBN,MAAM,CAAC,CAAD,CAFV;AAGA,QAAMY,eAAe,GAAGX,KAAK,CAACU,QAAN,CAAeJ,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;;AAEA,MAAIQ,MAAJ,EAAY;AACV,wBACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAED,QAAV;AAAoB,MAAA,SAAS,EAAC,YAA9B;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,OAAME,gBAAiB,IAAGE,eAAgB,EADxD;AAEE,QAAA,OAAO,EAAEP,OAFX;AAGE,QAAA,IAAI,EAAED,IAHR;AAAA,kBAKGD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD,MAaO;AACL,wBACE;AACE,MAAA,SAAS,EAAG,OAAMO,gBAAiB,IAAGE,eAAgB,EADxD;AAEE,MAAA,OAAO,EAAEP,OAFX;AAGE,MAAA,IAAI,EAAED,IAHR;AAAA,gBAKGD;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACF,CAvCM;KAAMD,M","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//arrays with css classes\r\nconst STYLES = [\"btn--primary\", \"btn--outline\"];\r\nconst SIZES = [\"btn--medium\", \"btn--large\"];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onclick,\r\n  buttonstyle,\r\n  buttonsize,\r\n  linkpath,\r\n  linkon,\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonstyle)\r\n    ? buttonstyle\r\n    : STYLES[0];\r\n  const checkButtonSize = SIZES.includes(buttonsize) ? buttonsize : SIZES[0];\r\n\r\n  if (linkon) {\r\n    return (\r\n      <Link to={linkpath} className=\"btn-mobile\">\r\n        <button\r\n          className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n          onClick={onclick}\r\n          type={type}\r\n        >\r\n          {children}\r\n          {/*kada stvorimo element Button, sav sadržaj se prosljeđuje ovdje kao children (npr. tekst Buttona) */}\r\n        </button>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onclick}\r\n        type={type}\r\n      >\r\n        {children}\r\n        {/*kada stvorimo element Button, sav sadržaj se prosljeđuje ovdje kao children (npr. tekst Buttona) */}\r\n      </button>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}