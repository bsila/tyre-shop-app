{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ivan\\\\Documents\\\\tyre-shop-app\\\\client\\\\src\\\\components\\\\pages\\\\Appointment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../App.css\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport { NativeFormsWebView } from \"native-forms\";\nimport { WebView } from \"react-native-webview\";\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default function Appointment() {\n  _s();\n\n  const [hasForm, showForm] = useState(false);\n\n  const show = () => showForm(true);\n\n  const hide = () => showForm(false);\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: \"Offline forms test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Show Form\",\n      onPress: show,\n      color: \"#20f\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Send Saved Form\",\n      onPress: sendSavedForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), hasForm && /*#__PURE__*/_jsxDEV(NativeForms, {\n      formJSON: OFFLINE_FORM,\n      onClose: hide,\n      noInternetConnection: formJSON => {\n        updateSavedForm(formJSON);\n        return true; // yes, I will send form once user is online\n        // return false; <- No, don't send a thing\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Appointment, \"tyBnqxev3yN3ppaZWnJzmsPnXYQ=\");\n\n_c = Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["C:/Users/Ivan/Documents/tyre-shop-app/client/src/components/pages/Appointment.js"],"names":["React","useState","Button","StyleSheet","Text","View","NativeFormsWebView","WebView","styles","create","container","flex","backgroundColor","alignItems","justifyContent","Appointment","hasForm","showForm","show","hide","sendSavedForm","OFFLINE_FORM","formJSON","updateSavedForm"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmCC,IAAnC,QAA+C,cAA/C;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,MAAMC,MAAM,GAAGL,UAAU,CAACM,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AASA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMiB,IAAI,GAAG,MAAMD,QAAQ,CAAC,IAAD,CAA3B;;AACA,QAAME,IAAI,GAAG,MAAMF,QAAQ,CAAC,KAAD,CAA3B;;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACE,SAApB;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAEQ,IAAnC;AAAyC,MAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAgC,MAAA,OAAO,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJF,EAMGJ,OAAO,iBACN,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEK,YADZ;AAEE,MAAA,OAAO,EAAEF,IAFX;AAGE,MAAA,oBAAoB,EAAGG,QAAD,IAAc;AAClCC,QAAAA,eAAe,CAACD,QAAD,CAAf;AACA,eAAO,IAAP,CAFkC,CAErB;AACb;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAzBuBP,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../App.css\";\r\nimport { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport { NativeFormsWebView } from \"native-forms\";\r\nimport { WebView } from \"react-native-webview\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default function Appointment() {\r\n  const [hasForm, showForm] = useState(false);\r\n  const show = () => showForm(true);\r\n  const hide = () => showForm(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Offline forms test</Text>\r\n\r\n      <Button title=\"Show Form\" onPress={show} color=\"#20f\" />\r\n      <Button title=\"Send Saved Form\" onPress={sendSavedForm} />\r\n\r\n      {hasForm && (\r\n        <NativeForms\r\n          formJSON={OFFLINE_FORM}\r\n          onClose={hide}\r\n          noInternetConnection={(formJSON) => {\r\n            updateSavedForm(formJSON);\r\n            return true; // yes, I will send form once user is online\r\n            // return false; <- No, don't send a thing\r\n          }}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}