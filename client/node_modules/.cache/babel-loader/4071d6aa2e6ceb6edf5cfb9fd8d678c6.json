{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ivan\\\\Documents\\\\tyre-shop-app\\\\client\\\\src\\\\components\\\\pages\\\\AppointmentManager.js\",\n    _s = $RefreshSig$();\n\nimport \"../../App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Button } from \"@material-ui/core\";\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { parse, format, toDate } from \"date-fns\";\nconst columns = [{\n  id: \"idorder\",\n  label: \"ID\",\n  minWidth: 15\n}, {\n  id: \"buyer_name\",\n  label: \"Ime\",\n  minWidth: 75\n}, {\n  id: \"buyer_surname\",\n  label: \"Prezime\",\n  minWidth: 75\n}, {\n  id: \"offer_code\",\n  label: \"Kod\",\n  minWidth: 15\n}, {\n  id: \"quantity\",\n  label: \"Količina\",\n  minWidth: 25\n}, {\n  id: \"e_mail\",\n  label: \"E-mail\",\n  minWidth: 75\n}, {\n  id: \"phone_no\",\n  label: \"Mobitel\",\n  minWidth: 50\n}, {\n  id: \"comments\",\n  label: \"Komentar\",\n  minWidth: 75\n}, {\n  id: \"service_date_time\",\n  label: \"Termin\",\n  minWidth: 50\n}, {\n  id: \"receipt_no\",\n  label: \"Broj računa\",\n  minWidth: 50\n}];\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 225\n  }\n}));\nvar appointmentList = [];\n\nfunction setAppointmentList(arr) {\n  appointmentList = arr;\n}\n\nfunction AppointmentManager() {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10); // const [appointmentList, setAppointmentList] = useState([]);\n\n  const [appointmentDate, setAppointmentDate] = useState(format(toDate(new Date()), \"yyyy-MM-dd'T'HH:mm\"));\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then(response => {\n      setAppointmentList(response.data);\n    });\n  }, []);\n\n  function refreshTableData() {\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then(response => {\n      setAppointmentList(response.data);\n    });\n  }\n\n  function editAppointment(id, newAppointment, receipt) {\n    Axios.put(\"http://localhost:3001/api/editAppointment\", {\n      id: id,\n      newAppointment: newAppointment,\n      receipt: receipt\n    });\n    refreshTableData();\n    refreshTableData();\n  }\n\n  function deleteAppointment(id) {\n    Axios.delete(`http://localhost:3001/api/deleteAppointment/${id}`);\n    refreshTableData();\n    refreshTableData();\n  }\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointmentManager\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Izmjena termina\"\n              }, \"title_edit\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Brisanje termina\"\n              }, \"title_delete\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: appointmentList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: [columns.map(column => {\n                  const value = row[column.id] ? row[column.id] : \"/\";\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: value !== \"/\" && column.id === \"service_date_time\" ? format(parse(value.toString(), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\", new Date()), \"yyyy-MM-dd' u 'HH:mm\") : value\n                  }, column.id + row[\"idorder\"], false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Popup, {\n                    trigger: /*#__PURE__*/_jsxDEV(Button, {\n                      linkon: \"0\",\n                      buttonstyle: \"btn--primary\",\n                      children: \"IZMJENI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 29\n                    }, this),\n                    maxWidth: \"200px\",\n                    maxHeight: \"auto\",\n                    modal: true,\n                    nested: true,\n                    contentStyle: {\n                      width: \"275px\",\n                      border: \"3px solid #242424\",\n                      borderRadius: \"5px\"\n                    },\n                    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"modal\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"header\",\n                        children: \" Odabir termina \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"content\",\n                        children: /*#__PURE__*/_jsxDEV(\"form\", {\n                          className: \"container\",\n                          noValidate: true,\n                          children: [/*#__PURE__*/_jsxDEV(TextField, {\n                            id: \"datetime-local\" + row[\"idorder\"],\n                            label: \"Uredi termin...\",\n                            type: \"datetime-local\",\n                            required: true,\n                            defaultValue: format(toDate(new Date()), \"yyyy-MM-dd'T'HH:mm\").toString(),\n                            className: classes.textField,\n                            InputLabelProps: {\n                              shrink: true\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 174,\n                            columnNumber: 35\n                          }, this), !row[\"receipt_no\"] ? /*#__PURE__*/_jsxDEV(TextField, {\n                            id: \"receipt-no-input\" + row[\"idorder\"],\n                            label: \"Upi\\u0161i broj ra\\u010Duna...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 37\n                          }, this) : \"\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"actions\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          buttonstyle: \"btn--primary\",\n                          linkon: \"0\",\n                          onClick: () => {\n                            setAppointmentDate(document.getElementById(\"datetime-local\" + row[\"idorder\"]).value);\n                            let date = parse(appointmentDate.toString().replace(\"T\", \" \"), \"yyyy-MM-dd HH:mm\", new Date());\n\n                            if (date.toString() !== \"Invalid Date\" && date.toString() !== \"\") {\n                              if (!row[\"receipt_no\"]) {\n                                //nema racun, treba procitat je li unesen\n                                var receipt = document.getElementById(\"receipt-no-input\" + row[\"idorder\"]).value.toString().replace(/\\s/g, \"\");\n\n                                if (receipt === \"\") {\n                                  alert(\"Nevaljan unos broja računa!\");\n                                } else {\n                                  editAppointment(row[\"idorder\"], appointmentDate.toString().replace(\"T\", \" \"), receipt);\n                                  close();\n                                }\n                              } else {\n                                editAppointment(row[\"idorder\"], appointmentDate.toString().replace(\"T\", \" \"), \"\");\n                                close();\n                              }\n                            } else {\n                              alert(\"Nevaljan unos termina!\");\n                            }\n                          },\n                          children: \"POTVRDI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, this)\n                }, \"edit_appointment\" + row[\"idorder\"], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    linkon: \"0\",\n                    onClick: () => {\n                      deleteAppointment(row[\"idorder\"]);\n                    },\n                    buttonstyle: \"btn--primary\",\n                    children: \"OBRI\\u0160I\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this)\n                }, \"delete_appointment\" + row[\"idorder\"], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)]\n              }, row.code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: appointmentList.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppointmentManager, \"+BBViwyNSf4PxAH5kYkWGmYdA1k=\", false, function () {\n  return [useStyles];\n});\n\n_c = AppointmentManager;\nexport default AppointmentManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppointmentManager\");","map":{"version":3,"sources":["C:/Users/Ivan/Documents/tyre-shop-app/client/src/components/pages/AppointmentManager.js"],"names":["React","useState","useEffect","Axios","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","Popup","makeStyles","TextField","parse","format","toDate","columns","id","label","minWidth","useStyles","theme","textField","marginLeft","spacing","marginRight","width","appointmentList","setAppointmentList","arr","AppointmentManager","page","setPage","rowsPerPage","setRowsPerPage","appointmentDate","setAppointmentDate","Date","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","get","then","response","data","refreshTableData","editAppointment","newAppointment","receipt","put","deleteAppointment","delete","classes","map","column","align","slice","row","toString","border","borderRadius","close","shrink","document","getElementById","date","replace","alert","code","length"],"mappings":"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","sourcesContent":["import \"../../App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { parse, format, toDate } from \"date-fns\";\r\n\r\nconst columns = [\r\n  { id: \"idorder\", label: \"ID\", minWidth: 15 },\r\n  { id: \"buyer_name\", label: \"Ime\", minWidth: 75 },\r\n  { id: \"buyer_surname\", label: \"Prezime\", minWidth: 75 },\r\n  { id: \"offer_code\", label: \"Kod\", minWidth: 15 },\r\n  { id: \"quantity\", label: \"Količina\", minWidth: 25 },\r\n  { id: \"e_mail\", label: \"E-mail\", minWidth: 75 },\r\n  { id: \"phone_no\", label: \"Mobitel\", minWidth: 50 },\r\n  { id: \"comments\", label: \"Komentar\", minWidth: 75 },\r\n  { id: \"service_date_time\", label: \"Termin\", minWidth: 50 },\r\n  { id: \"receipt_no\", label: \"Broj računa\", minWidth: 50 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 225,\r\n  },\r\n}));\r\n\r\nvar appointmentList = [];\r\n\r\nfunction setAppointmentList(arr) {\r\n  appointmentList = arr;\r\n}\r\n\r\nfunction AppointmentManager() {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  // const [appointmentList, setAppointmentList] = useState([]);\r\n  const [appointmentDate, setAppointmentDate] = useState(\r\n    format(toDate(new Date()), \"yyyy-MM-dd'T'HH:mm\")\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then((response) => {\r\n      setAppointmentList(response.data);\r\n    });\r\n  }, []);\r\n\r\n  function refreshTableData() {\r\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then((response) => {\r\n      setAppointmentList(response.data);\r\n    });\r\n  }\r\n\r\n  function editAppointment(id, newAppointment, receipt) {\r\n    Axios.put(\"http://localhost:3001/api/editAppointment\", {\r\n      id: id,\r\n      newAppointment: newAppointment,\r\n      receipt: receipt,\r\n    });\r\n\r\n    refreshTableData();\r\n    refreshTableData();\r\n  }\r\n\r\n  function deleteAppointment(id) {\r\n    Axios.delete(`http://localhost:3001/api/deleteAppointment/${id}`);\r\n\r\n    refreshTableData();\r\n    refreshTableData();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"appointmentManager\">\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell key=\"title_edit\">Izmjena termina</TableCell>\r\n                <TableCell key=\"title_delete\">Brisanje termina</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {appointmentList\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.code}\r\n                    >\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id] ? row[column.id] : \"/\";\r\n\r\n                        return (\r\n                          <TableCell\r\n                            key={column.id + row[\"idorder\"]}\r\n                            align={column.align}\r\n                          >\r\n                            {value !== \"/\" && column.id === \"service_date_time\"\r\n                              ? format(\r\n                                  parse(\r\n                                    value.toString(),\r\n                                    \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\",\r\n                                    new Date()\r\n                                  ),\r\n                                  \"yyyy-MM-dd' u 'HH:mm\"\r\n                                )\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n\r\n                      <TableCell\r\n                        key={\"edit_appointment\" + row[\"idorder\"]}\r\n                        align=\"center\"\r\n                      >\r\n                        <Popup\r\n                          trigger={\r\n                            <Button linkon=\"0\" buttonstyle=\"btn--primary\">\r\n                              IZMJENI\r\n                            </Button>\r\n                          }\r\n                          maxWidth=\"200px\"\r\n                          maxHeight=\"auto\"\r\n                          modal\r\n                          nested\r\n                          contentStyle={{\r\n                            width: \"275px\",\r\n                            border: \"3px solid #242424\",\r\n                            borderRadius: \"5px\",\r\n                          }}\r\n                        >\r\n                          {(close) => (\r\n                            <div className=\"modal\">\r\n                              <div className=\"header\"> Odabir termina </div>\r\n                              <div className=\"content\">\r\n                                <form className=\"container\" noValidate>\r\n                                  <TextField\r\n                                    id={\"datetime-local\" + row[\"idorder\"]}\r\n                                    label=\"Uredi termin...\"\r\n                                    type=\"datetime-local\"\r\n                                    required\r\n                                    defaultValue={format(\r\n                                      toDate(new Date()),\r\n                                      \"yyyy-MM-dd'T'HH:mm\"\r\n                                    ).toString()}\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                      shrink: true,\r\n                                    }}\r\n                                  />\r\n                                  {!row[\"receipt_no\"] ? (\r\n                                    <TextField\r\n                                      id={\"receipt-no-input\" + row[\"idorder\"]}\r\n                                      label=\"Upiši broj računa...\"\r\n                                    />\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </form>\r\n                              </div>\r\n\r\n                              <div className=\"actions\">\r\n                                <Button\r\n                                  buttonstyle=\"btn--primary\"\r\n                                  linkon=\"0\"\r\n                                  onClick={() => {\r\n                                    setAppointmentDate(\r\n                                      document.getElementById(\r\n                                        \"datetime-local\" + row[\"idorder\"]\r\n                                      ).value\r\n                                    );\r\n\r\n                                    let date = parse(\r\n                                      appointmentDate\r\n                                        .toString()\r\n                                        .replace(\"T\", \" \"),\r\n                                      \"yyyy-MM-dd HH:mm\",\r\n                                      new Date()\r\n                                    );\r\n\r\n                                    if (\r\n                                      date.toString() !== \"Invalid Date\" &&\r\n                                      date.toString() !== \"\"\r\n                                    ) {\r\n                                      if (!row[\"receipt_no\"]) {\r\n                                        //nema racun, treba procitat je li unesen\r\n                                        var receipt = document\r\n                                          .getElementById(\r\n                                            \"receipt-no-input\" + row[\"idorder\"]\r\n                                          )\r\n                                          .value.toString()\r\n                                          .replace(/\\s/g, \"\");\r\n\r\n                                        if (receipt === \"\") {\r\n                                          alert(\"Nevaljan unos broja računa!\");\r\n                                        } else {\r\n                                          editAppointment(\r\n                                            row[\"idorder\"],\r\n                                            appointmentDate\r\n                                              .toString()\r\n                                              .replace(\"T\", \" \"),\r\n                                            receipt\r\n                                          );\r\n\r\n                                          close();\r\n                                        }\r\n                                      } else {\r\n                                        editAppointment(\r\n                                          row[\"idorder\"],\r\n                                          appointmentDate\r\n                                            .toString()\r\n                                            .replace(\"T\", \" \"),\r\n                                          \"\"\r\n                                        );\r\n\r\n                                        close();\r\n                                      }\r\n                                    } else {\r\n                                      alert(\"Nevaljan unos termina!\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  POTVRDI\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Popup>\r\n                      </TableCell>\r\n\r\n                      <TableCell\r\n                        key={\"delete_appointment\" + row[\"idorder\"]}\r\n                        align=\"center\"\r\n                      >\r\n                        <Button\r\n                          linkon=\"0\"\r\n                          onClick={() => {\r\n                            deleteAppointment(row[\"idorder\"]);\r\n                          }}\r\n                          buttonstyle=\"btn--primary\"\r\n                        >\r\n                          OBRIŠI\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={appointmentList.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentManager;\r\n"]},"metadata":{},"sourceType":"module"}