[{"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\index.js":"1","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Footer.js":"2","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Contact.js":"3","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Home.js":"4","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\NotificationManager.js":"5","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Offer.js":"6","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Cards.js":"7","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\CardItem.js":"8","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Notification.js":"9","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Appointment.js":"10","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Navbar.js":"11","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\AppointmentManager.js":"12"},{"size":158,"mtime":1610484674846,"results":"13","hashOfConfig":"14"},{"size":3641,"mtime":1610484674756,"results":"15","hashOfConfig":"14"},{"size":190,"mtime":1610484674759,"results":"16","hashOfConfig":"14"},{"size":252,"mtime":1610484674760,"results":"17","hashOfConfig":"14"},{"size":17459,"mtime":1610550952335,"results":"18","hashOfConfig":"14"},{"size":288,"mtime":1610484674761,"results":"19","hashOfConfig":"14"},{"size":2194,"mtime":1610484674755,"results":"20","hashOfConfig":"14"},{"size":611,"mtime":1610484674755,"results":"21","hashOfConfig":"14"},{"size":3328,"mtime":1610531939326,"results":"22","hashOfConfig":"14"},{"size":4358,"mtime":1610551134622,"results":"23","hashOfConfig":"14"},{"size":2929,"mtime":1610484674757,"results":"24","hashOfConfig":"14"},{"size":11891,"mtime":1610551209892,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dp8cm2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\index.js",[],["53","54"],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Footer.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Contact.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Home.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\NotificationManager.js",["55","56","57","58","59","60","61","62"],"import \"../../App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { parse, format, toDate } from \"date-fns\";\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst columns = [\r\n  { id: \"idorder\", label: \"ID\", minWidth: 15, sortable: true },\r\n  { id: \"buyer_name\", label: \"Ime\", minWidth: 75, sortable: true },\r\n  { id: \"buyer_surname\", label: \"Prezime\", minWidth: 75, sortable: true },\r\n  { id: \"offer_code\", label: \"Kod\", minWidth: 15, sortable: true },\r\n  { id: \"quantity\", label: \"Količina\", minWidth: 25, sortable: true },\r\n  { id: \"e_mail\", label: \"E-mail\", minWidth: 75, sortable: false },\r\n  { id: \"phone_no\", label: \"Mobitel\", minWidth: 50, sortable: false },\r\n  { id: \"comments\", label: \"Komentar\", minWidth: 75, maxWidth: 400, sortable: false},\r\n  { id: \"service_date_time\", label: \"Termin\", minWidth: 50, sortable: true },\r\n  { id: \"receipt_no\", label: \"Broj računa\", minWidth: 50, sortable: true },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const sortHeaders = [\"e-mail\", \"phone_no\", \"comments\"]\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((column) => (\r\n            <TableCell\r\n              key={column.id}\r\n              align={column.align}\r\n              style={{minWidth: column.minWidth}}\r\n              sortDirection={orderBy === column.id && column.sortable ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === column.id && column.sortable}\r\n                direction={orderBy === column.id ? order : 'asc'}\r\n                onClick={createSortHandler(column.id)}\r\n              >\r\n                {column.label}\r\n                {(orderBy === column.id) && column.sortable ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Obavijesti\r\n        </Typography>\r\n      }\r\n\r\n      {\r\n        <Tooltip title=\"Filtriraj listu\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      }\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction NotificationManager() {\r\n  //const [page, setPage] = useState(0);\r\n  //const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [notificationList, setNotificationList] = useState([]);\r\n  const [notificationDate, setNotificationDate] = useState(\r\n    format(toDate(new Date()), \"yyyy-MM-dd'T'HH:mm\")\r\n  );\r\n\r\n  /*const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  */\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then((response) => {\r\n      setNotificationList(response.data);\r\n    });\r\n  }, []);\r\n\r\n  function refreshTableData() {\r\n    Axios.get(\"http://localhost:3001/api/getAppointments\").then((response) => {\r\n      setNotificationList(response.data);\r\n    });\r\n  }\r\n\r\n  function editNotification(id, newNotification, receipt) {\r\n    Axios.put(\"http://localhost:3001/api/editAppointment\", {\r\n      id: id,\r\n      newNotification: newNotification,\r\n      receipt: receipt,\r\n    });\r\n\r\n    refreshTableData();\r\n    refreshTableData();\r\n  }\r\n\r\n  function deleteNotification(id) {\r\n    Axios.delete(`http://localhost:3001/api/deleteAppointment/${id}`);\r\n\r\n    refreshTableData();\r\n    refreshTableData();\r\n  }\r\n\r\n  //const classes = useStyles();\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('idorder');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = notificationList.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"notificationManager\">\r\n      <Paper>\r\n        <EnhancedTableToolbar numSelected={selected.length}/>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <EnhancedTableHead \r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={notificationList.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort (notificationList, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.code}\r\n                    >\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id] ? row[column.id] : \"/\";\r\n\r\n                        return (\r\n                          <TableCell\r\n                            key={column.id + row[\"idorder\"]}\r\n                            align={column.align}\r\n                            style={{minWidth: column.minWidth, maxWidth: column.maxWidth, whiteSpace: 'nowrap', overflow: 'auto'}}\r\n                          >\r\n                            {value !== \"/\" && column.id === \"service_date_time\"\r\n                              ? format(\r\n                                  parse(\r\n                                    value.toString(),\r\n                                    \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\",\r\n                                    new Date()\r\n                                  ),\r\n                                  \"yyyy-MM-dd' u 'HH:mm\"\r\n                                )\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n\r\n                      <TableCell\r\n                        key={\"edit_notification\" + row[\"idorder\"]}\r\n                        align=\"center\"\r\n                        \r\n                      >\r\n                        <Popup\r\n                          trigger={\r\n                            <Button linkon=\"0\" buttonstyle=\"btn--primary\">\r\n                              IZMJENI\r\n                            </Button>\r\n                          }\r\n                          maxWidth=\"200px\"\r\n                          maxHeight=\"auto\"\r\n                          modal\r\n                          nested\r\n                          contentStyle={{\r\n                            width: \"275px\",\r\n                            border: \"3px solid #242424\",\r\n                            borderRadius: \"5px\",\r\n                          }}\r\n                        >\r\n                          {(close) => (\r\n                            <div className=\"modal\">\r\n                              <div className=\"header\"> Odabir termina </div>\r\n                              <div className=\"content\">\r\n                                <form className=\"container\" noValidate>\r\n                                  <TextField\r\n                                    id={\"datetime-local\" + row[\"idorder\"]}\r\n                                    label=\"Uredi termin...\"\r\n                                    type=\"datetime-local\"\r\n                                    required\r\n                                    defaultValue={format(\r\n                                      toDate(new Date()),\r\n                                      \"yyyy-MM-dd'T'HH:mm\"\r\n                                    ).toString()}\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                      shrink: true,\r\n                                    }}\r\n                                  />\r\n                                  {!row[\"receipt_no\"] ? (\r\n                                    <TextField\r\n                                      id={\"receipt-no-input\" + row[\"idorder\"]}\r\n                                      label=\"Upiši broj računa...\"\r\n                                    />\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </form>\r\n                              </div>\r\n\r\n                              <div className=\"actions\">\r\n                                <Button\r\n                                  buttonstyle=\"btn--primary\"\r\n                                  linkon=\"0\"\r\n                                  onClick={() => {\r\n                                    setNotificationDate(\r\n                                      document.getElementById(\r\n                                        \"datetime-local\" + row[\"idorder\"]\r\n                                      ).value\r\n                                    );\r\n\r\n                                    let date = parse(\r\n                                      notificationDate\r\n                                        .toString()\r\n                                        .replace(\"T\", \" \"),\r\n                                      \"yyyy-MM-dd HH:mm\",\r\n                                      new Date()\r\n                                    );\r\n\r\n                                    if (\r\n                                      date.toString() !== \"Invalid Date\" &&\r\n                                      date.toString() !== \"\"\r\n                                    ) {\r\n                                      if (!row[\"receipt_no\"]) {\r\n                                        //nema racun, treba procitat je li unesen\r\n                                        var receipt = document\r\n                                          .getElementById(\r\n                                            \"receipt-no-input\" + row[\"idorder\"]\r\n                                          )\r\n                                          .value.toString()\r\n                                          .replace(/\\s/g, \"\");\r\n\r\n                                        if (receipt === \"\") {\r\n                                          alert(\"Nevaljan unos broja računa!\");\r\n                                        } else {\r\n                                          editNotification(\r\n                                            row[\"idorder\"],\r\n                                            notificationDate\r\n                                              .toString()\r\n                                              .replace(\"T\", \" \"),\r\n                                            receipt\r\n                                          );\r\n\r\n                                          close();\r\n                                        }\r\n                                      } else {\r\n                                        editNotification(\r\n                                          row[\"idorder\"],\r\n                                          notificationDate\r\n                                            .toString()\r\n                                            .replace(\"T\", \" \"),\r\n                                          \"\"\r\n                                        );\r\n\r\n                                        close();\r\n                                      }\r\n                                    } else {\r\n                                      alert(\"Nevaljan unos termina!\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  POTVRDI\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </Popup>\r\n                      </TableCell>\r\n\r\n                      <TableCell\r\n                        key={\"delete_notification\" + row[\"idorder\"]}\r\n                        align=\"center\"\r\n                      >\r\n                        <Button\r\n                          linkon=\"0\"\r\n                          onClick={() => { if (window.confirm(\"Sigurno želite obrisati?\"))\r\n                            deleteNotification(row[\"idorder\"]);\r\n                          }}\r\n                          buttonstyle=\"btn--primary\"\r\n                        >\r\n                          OBRIŠI\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={notificationList.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationManager;\r\n","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Offer.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Cards.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\CardItem.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Notification.js",["63","64","65","66"],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\Appointment.js",["67","68","69","70","71","72","73","74","75"],"import React, { useState } from \"react\";\r\nimport \"../../App.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default function Appointment() {\r\n  const [termsConditions, setTermsConditions] = useState(false);\r\n  const [errorName, setErrorName] = useState(false);\r\n  const [errorSurname, setErrorSurname] = useState(false);\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n  const [errorPhoneNo, setErrorPhoneNo] = useState(false);\r\n  const [errorOfferCode, setErrorOfferCode] = useState(false);\r\n  const [errorQuantity, setErrorQuantity] = useState(false);\r\n\r\n  return (\r\n    <form className=\"appointment\">\r\n      <div className=\"form--container\">\r\n        <p className=\"title\">Osobni podaci</p>\r\n        <TextField\r\n          error={errorName}\r\n          id=\"first_name\"\r\n          variant=\"outlined\"\r\n          label=\"Ime\"\r\n          placeholder=\"Ivan\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite ime.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorSurname}\r\n          variant=\"outlined\"\r\n          id=\"last_name\"\r\n          label=\"Prezime\"\r\n          placeholder=\"Horvat\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite prezime.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorEmail}\r\n          variant=\"outlined\"\r\n          id=\"e_mail\"\r\n          label=\"Adresa e-pošte\"\r\n          placeholder=\"ivan.horvat@mail.com\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite valjanu adresu e-pošte.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorPhoneNo}\r\n          variant=\"outlined\"\r\n          id=\"phone_no\"\r\n          label=\"Telefon/mobitel\"\r\n          placeholder=\"0912345678\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite telefon/mobitel.\"\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form--container\">\r\n        <p className=\"title\">Podaci vezani za narudžbu</p>\r\n        <TextField\r\n          error={errorOfferCode}\r\n          variant=\"outlined\"\r\n          id=\"offer_code\"\r\n          label=\"Šifra proizvoda\"\r\n          placeholder=\"1234567\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite šifru proizvoda.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          error={errorQuantity}\r\n          variant=\"outlined\"\r\n          id=\"quantity\"\r\n          label=\"Količina\"\r\n          placeholder=\"4\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite količinu.\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          id=\"dimension\"\r\n          label=\"Dimenzija\"\r\n          placeholder=\"195/50/15\"\r\n          required\r\n          className=\"container--item\"\r\n          //   helperText=\"Unesite dimenziju.\"\r\n          size=\"small\"\r\n        />\r\n        <TextareaAutosize\r\n          aria-label=\"Dodatni komentar\"\r\n          id=\"comment\"\r\n          rowsMin={5}\r\n          placeholder=\"Komentar...\"\r\n          className=\"comment--textarea\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form--container\">\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              onChange={(event) => {\r\n                setTermsConditions(event.target.checked);\r\n              }}\r\n              name=\"checkTermsConditions\"\r\n              id=\"checkTermsConditions\"\r\n            />\r\n          }\r\n          label=\"Slažem se s Odredbama i uvjetima te Pravilima privatnosti\"\r\n          //   helperText=\"Za nastavak je nužno prihvatiti.\"\r\n        />\r\n        <Button\r\n          className=\"submit--button\"\r\n          onlink=\"0\"\r\n          buttonsize=\"btn--large\"\r\n          buttonstyle=\"btn--primary\"\r\n        >\r\n          NARUČI SE\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Korisnik\\Documents\\Visual Studio 2019\\RWA\\tyre-shop-app\\client\\src\\components\\pages\\AppointmentManager.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":24,"column":8,"nodeType":"82","messageId":"83","endLine":24,"endColumn":16},{"ruleId":"80","severity":1,"message":"84","line":27,"column":8,"nodeType":"82","messageId":"83","endLine":27,"endColumn":24},{"ruleId":"80","severity":1,"message":"85","line":28,"column":8,"nodeType":"82","messageId":"83","endLine":28,"endColumn":14},{"ruleId":"80","severity":1,"message":"86","line":29,"column":8,"nodeType":"82","messageId":"83","endLine":29,"endColumn":18},{"ruleId":"80","severity":1,"message":"87","line":96,"column":20,"nodeType":"82","messageId":"83","endLine":96,"endColumn":36},{"ruleId":"80","severity":1,"message":"88","line":96,"column":54,"nodeType":"82","messageId":"83","endLine":96,"endColumn":65},{"ruleId":"80","severity":1,"message":"89","line":96,"column":67,"nodeType":"82","messageId":"83","endLine":96,"endColumn":75},{"ruleId":"80","severity":1,"message":"90","line":101,"column":9,"nodeType":"82","messageId":"83","endLine":101,"endColumn":20},{"ruleId":"80","severity":1,"message":"91","line":9,"column":18,"nodeType":"82","messageId":"83","endLine":9,"endColumn":27},{"ruleId":"80","severity":1,"message":"92","line":12,"column":26,"nodeType":"82","messageId":"83","endLine":12,"endColumn":41},{"ruleId":"80","severity":1,"message":"93","line":13,"column":25,"nodeType":"82","messageId":"83","endLine":13,"endColumn":39},{"ruleId":"80","severity":1,"message":"94","line":15,"column":12,"nodeType":"82","messageId":"83","endLine":15,"endColumn":22},{"ruleId":"80","severity":1,"message":"95","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":32},{"ruleId":"80","severity":1,"message":"96","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":20},{"ruleId":"80","severity":1,"message":"97","line":12,"column":10,"nodeType":"82","messageId":"83","endLine":12,"endColumn":25},{"ruleId":"80","severity":1,"message":"98","line":13,"column":21,"nodeType":"82","messageId":"83","endLine":13,"endColumn":33},{"ruleId":"80","severity":1,"message":"99","line":14,"column":24,"nodeType":"82","messageId":"83","endLine":14,"endColumn":39},{"ruleId":"80","severity":1,"message":"100","line":15,"column":22,"nodeType":"82","messageId":"83","endLine":15,"endColumn":35},{"ruleId":"80","severity":1,"message":"101","line":16,"column":24,"nodeType":"82","messageId":"83","endLine":16,"endColumn":39},{"ruleId":"80","severity":1,"message":"102","line":17,"column":26,"nodeType":"82","messageId":"83","endLine":17,"endColumn":43},{"ruleId":"80","severity":1,"message":"103","line":18,"column":25,"nodeType":"82","messageId":"83","endLine":18,"endColumn":41},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'DeleteIcon' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'sortHeaders' is assigned a value but never used.","'FormLabel' is defined but never used.","'setErrorReceipt' is assigned a value but never used.","'setErrorOption' is assigned a value but never used.","'radioValue' is assigned a value but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'termsConditions' is assigned a value but never used.","'setErrorName' is assigned a value but never used.","'setErrorSurname' is assigned a value but never used.","'setErrorEmail' is assigned a value but never used.","'setErrorPhoneNo' is assigned a value but never used.","'setErrorOfferCode' is assigned a value but never used.","'setErrorQuantity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]